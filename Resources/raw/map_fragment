precision mediump float;  
							
uniform sampler2D u_Texture;
uniform sampler2D u_TextureF;
uniform sampler2D u_TextureS;

varying vec3 v_LightPos;
varying vec4 v_Color; 
varying vec3 v_Coord; 
varying vec3 v_Normal;  
varying vec2 v_TexCoordinate;
varying mat4 v_MVMatrix;



void main(){ 
 
	float distance = length(v_LightPos - v_Coord);
    vec3 lightVector = normalize(v_LightPos - v_Coord);
	float diffuse = max(dot(v_Normal, lightVector), 0.1);
	diffuse = diffuse * (1.0 / (1.0 + (0.25 * distance * distance)));

    vec4 color = vec4(diffuse);
    color += texture2D(u_Texture, v_TexCoordinate);
	 
    gl_FragColor = color;
}